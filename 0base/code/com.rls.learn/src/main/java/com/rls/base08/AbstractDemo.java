package com.rls.base08;
/*
 * 抽象类的成员特点：
 * 		成员变量：
 * 			有成员变量，成员变量可以是变量，也可以是常量。
 * 		构造方法：
 * 			有构造方法。
 * 			抽象类中构造方法的作用?
 * 				用于子类访问父类数据的初始化。
 * 		成员方法：
 * 			有成员方法，成员方法可以是抽象的，也可以是非抽象的。
 * 			抽象方法：限定子类必须完成某些动作
 * 			非抽象方法：提高代码的复用性
 */

/*
 * 抽象类的特点：
 * 		A:抽象类和抽象方法必须使用abstract关键字修饰
 * 		B:抽象类中不一定有抽象方法，有抽象方法的类一定是抽象类
 * 		C:抽象类不能实例化
 * 			抽象类如何实例化呢?
 * 			参照多态的方式，通过子类对象实例化。
 * 		D:抽象类的子类
 * 			要么重写抽象类中的所有抽象方法
 * 			要么是抽象类
 */
public class AbstractDemo {
    public static void main(String[] args) {
        //创建对象
        //Animal a = new Animal();
        //按照多态的形式实例化抽象类
        Animal a = new Cat();
        a.eat();
        a.sleep();
    }
}