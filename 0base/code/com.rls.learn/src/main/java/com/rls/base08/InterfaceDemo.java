package main.java.com.rls.base08;

/*
 * 接口的特点：
 * 		A:定义接口使用的是interface关键字
 * 		B:类和接口之间是实现关系，用implements关键字表示
 * 		C:接口不能实例化
 * 			接口有没有其他的方式实例化呢?
 * 			参照多态的形式使用实现类来实例化。
 * 		D:接口的实现类
 * 			要么重写接口中的所有的抽象方法
 * 			要么是一个抽象类
 *
 * 多态的几种形式：
 * 		具体类多态(几乎不用)
 * 		抽象类多态(常用)
 * 		接口多态(最常用)
 */

/*
 * 抽象类和接口的区别：
 * 		A:成员区别
 * 			抽象类：
 * 				成员变量：可以是变量，也可以是常量
 * 				构造方法：有
 * 				成员方法：可以是抽象方法，也可以是非抽象方法
 * 			接口：
 * 				成员变量：只能是常量
 * 				成员方法：只能是抽象方法
 * 		B:关系区别
 * 			类与类：继承关系，只能单继承，可以多层继承
 * 			类与接口：实现关系，可以单实现，也可以多实现
 * 			接口与接口：继承关系，可以单继承，也可以多继承
 * 		C:设计理念的区别
 * 			抽象类 被继承体现的是："is a"	抽象类中定义的是继承体系的共性功能
 * 			接口 被实现体现的是："like a"  接口中定义的是该体系的扩展功能
 *
 * 			举例：
 * 				猫，动物
 * 				猫，跳高运动员
 */
public class InterfaceDemo {
    public static void main(String[] args) {
        //Jumpping j = new Jumpping();
        //接口多态的形式实例化
        Cat j = new Cat();
        j.jump();
    }
}
